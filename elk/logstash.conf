input {
    # beats {
    #     port => 5044
    # }
    tcp {
        port => 24224
        codec => plain {
           charset => "ISO-8859-1"
            # charset => "UTF-8"
        }
    }
}

filter {
    # Remove control characters from the message
    mutate {
        gsub => ["message", "[^\u0020-\u007E]+", ""]  # Keeps only printable ASCII characters
    }

    grok {
        match => ["message", "%{GREEDYDATA:UNWANTED}\ apimMetrics:%{GREEDYDATA:apimMetrics}\, %{GREEDYDATA:UNWANTED} \:%{GREEDYDATA:properties}"]
    }

    # Remove any extra data after the JSON's closing bracket
    mutate {
        gsub => ["properties", "(}.*)", "}"]
    }

    # Extract apimMetrics and properties fields from the message
    # grok {
    #     match => [
    #         "message", "apimMetrics:\s(?<apimMetrics>[^\s]+).*properties\s*:\s*(?<properties>\{.*\})"
    #     ]
    # }

    # Parse JSON from the cleaned `properties` field
    json {
        source => "properties"
    }

    # Ensure properties field is valid JSON before attempting to parse
    # if [properties] {
    #     # Strip any trailing or leading problematic characters from properties
    #     mutate {
    #         gsub => [
    #             "properties", "^\s*{", "{",
    #             "properties", "}\s*$", "}"
    #         ]
    #     }

    #     json {
    #         source => "properties"
    #         target => "parsed_properties"
    #         skip_on_invalid_json => true
    #     }
        
    #     # Add parsed properties to the root level if JSON parsing is successful
    #     if "_jsonparsefailure" not in [tags] {
    #         mutate {
    #             add_field => { "[apiName]" => "%{[parsed_properties][apiName]}" }
    #             # Repeat for any other required fields from parsed_properties
    #         }
    #     }
    # }
}

output {
    # stdout { codec => rubydebug }

    if [apimMetrics] == " apim:response" {
        stdout { codec => rubydebug }
#     #     # elasticsearch {
#         #     hosts => ["http://elasticsearch:9200"]
#         #     index => "apim_event_response"
#         #     user => "${ELASTIC_USERNAME}"
#         #     password => "${ELASTIC_PASSWORD}"
        # }
    } else if [apimMetrics] == " apim:faulty" {
        stdout { codec => rubydebug }
#         # elasticsearch {
#         #     hosts => ["http://elasticsearch:9200"]
#         #     index => "apim_event_faulty"
#         #     user => "${ELASTIC_USERNAME}"
#         #     password => "${ELASTIC_PASSWORD}"
#         # }
    }
}
